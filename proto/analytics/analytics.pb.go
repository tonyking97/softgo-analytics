// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: analytics.proto

package analytics_pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,2,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type SalesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   float64 `protobuf:"fixed64,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BillCount   float64 `protobuf:"fixed64,2,opt,name=billCount,proto3" json:"billCount,omitempty"`
	TotalAmount float64 `protobuf:"fixed64,3,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
}

func (x *SalesData) Reset() {
	*x = SalesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesData) ProtoMessage() {}

func (x *SalesData) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesData.ProtoReflect.Descriptor instead.
func (*SalesData) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{2}
}

func (x *SalesData) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SalesData) GetBillCount() float64 {
	if x != nil {
		return x.BillCount
	}
	return 0
}

func (x *SalesData) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type PeriodicSalesAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Interval    string `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	From        int64  `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *PeriodicSalesAmountRequest) Reset() {
	*x = PeriodicSalesAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicSalesAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicSalesAmountRequest) ProtoMessage() {}

func (x *PeriodicSalesAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicSalesAmountRequest.ProtoReflect.Descriptor instead.
func (*PeriodicSalesAmountRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{3}
}

func (x *PeriodicSalesAmountRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *PeriodicSalesAmountRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *PeriodicSalesAmountRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *PeriodicSalesAmountRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *PeriodicSalesAmountRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type PeriodicSalesAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Total     float64      `protobuf:"fixed64,2,opt,name=total,proto3" json:"total,omitempty"`
	SalesData []*SalesData `protobuf:"bytes,3,rep,name=salesData,proto3" json:"salesData,omitempty"`
}

func (x *PeriodicSalesAmountResponse) Reset() {
	*x = PeriodicSalesAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicSalesAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicSalesAmountResponse) ProtoMessage() {}

func (x *PeriodicSalesAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicSalesAmountResponse.ProtoReflect.Descriptor instead.
func (*PeriodicSalesAmountResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{4}
}

func (x *PeriodicSalesAmountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PeriodicSalesAmountResponse) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PeriodicSalesAmountResponse) GetSalesData() []*SalesData {
	if x != nil {
		return x.SalesData
	}
	return nil
}

type StoreSalesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId   string       `protobuf:"bytes,1,opt,name=storeId,proto3" json:"storeId,omitempty"`
	BillCount float64      `protobuf:"fixed64,2,opt,name=billCount,proto3" json:"billCount,omitempty"`
	Total     float64      `protobuf:"fixed64,3,opt,name=total,proto3" json:"total,omitempty"`
	SalesData []*SalesData `protobuf:"bytes,4,rep,name=salesData,proto3" json:"salesData,omitempty"`
}

func (x *StoreSalesData) Reset() {
	*x = StoreSalesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreSalesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSalesData) ProtoMessage() {}

func (x *StoreSalesData) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSalesData.ProtoReflect.Descriptor instead.
func (*StoreSalesData) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{5}
}

func (x *StoreSalesData) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *StoreSalesData) GetBillCount() float64 {
	if x != nil {
		return x.BillCount
	}
	return 0
}

func (x *StoreSalesData) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StoreSalesData) GetSalesData() []*SalesData {
	if x != nil {
		return x.SalesData
	}
	return nil
}

type PeriodicStoreSalesAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreCount  int64  `protobuf:"varint,2,opt,name=storeCount,proto3" json:"storeCount,omitempty"`
	Interval    string `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	From        int64  `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *PeriodicStoreSalesAmountRequest) Reset() {
	*x = PeriodicStoreSalesAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicStoreSalesAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicStoreSalesAmountRequest) ProtoMessage() {}

func (x *PeriodicStoreSalesAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicStoreSalesAmountRequest.ProtoReflect.Descriptor instead.
func (*PeriodicStoreSalesAmountRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{6}
}

func (x *PeriodicStoreSalesAmountRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *PeriodicStoreSalesAmountRequest) GetStoreCount() int64 {
	if x != nil {
		return x.StoreCount
	}
	return 0
}

func (x *PeriodicStoreSalesAmountRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *PeriodicStoreSalesAmountRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *PeriodicStoreSalesAmountRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type PeriodicStoreSalesAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success        bool              `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	StoreSalesData []*StoreSalesData `protobuf:"bytes,2,rep,name=storeSalesData,proto3" json:"storeSalesData,omitempty"`
}

func (x *PeriodicStoreSalesAmountResponse) Reset() {
	*x = PeriodicStoreSalesAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeriodicStoreSalesAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodicStoreSalesAmountResponse) ProtoMessage() {}

func (x *PeriodicStoreSalesAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodicStoreSalesAmountResponse.ProtoReflect.Descriptor instead.
func (*PeriodicStoreSalesAmountResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{7}
}

func (x *PeriodicStoreSalesAmountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PeriodicStoreSalesAmountResponse) GetStoreSalesData() []*StoreSalesData {
	if x != nil {
		return x.StoreSalesData
	}
	return nil
}

type SoldItemsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Count float64 `protobuf:"fixed64,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *SoldItemsData) Reset() {
	*x = SoldItemsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoldItemsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoldItemsData) ProtoMessage() {}

func (x *SoldItemsData) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoldItemsData.ProtoReflect.Descriptor instead.
func (*SoldItemsData) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{8}
}

func (x *SoldItemsData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SoldItemsData) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TopSoldItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	Count       int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TopSoldItemsRequest) Reset() {
	*x = TopSoldItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopSoldItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopSoldItemsRequest) ProtoMessage() {}

func (x *TopSoldItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopSoldItemsRequest.ProtoReflect.Descriptor instead.
func (*TopSoldItemsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{9}
}

func (x *TopSoldItemsRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *TopSoldItemsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *TopSoldItemsRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *TopSoldItemsRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *TopSoldItemsRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TopSoldItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	SoldItemsData []*SoldItemsData `protobuf:"bytes,2,rep,name=soldItemsData,proto3" json:"soldItemsData,omitempty"`
}

func (x *TopSoldItemsResponse) Reset() {
	*x = TopSoldItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopSoldItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopSoldItemsResponse) ProtoMessage() {}

func (x *TopSoldItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopSoldItemsResponse.ProtoReflect.Descriptor instead.
func (*TopSoldItemsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{10}
}

func (x *TopSoldItemsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TopSoldItemsResponse) GetSoldItemsData() []*SoldItemsData {
	if x != nil {
		return x.SoldItemsData
	}
	return nil
}

type LeastSoldItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	Count       int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LeastSoldItemsRequest) Reset() {
	*x = LeastSoldItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeastSoldItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeastSoldItemsRequest) ProtoMessage() {}

func (x *LeastSoldItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeastSoldItemsRequest.ProtoReflect.Descriptor instead.
func (*LeastSoldItemsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{11}
}

func (x *LeastSoldItemsRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *LeastSoldItemsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *LeastSoldItemsRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *LeastSoldItemsRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *LeastSoldItemsRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type LeastSoldItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	SoldItemsData []*SoldItemsData `protobuf:"bytes,2,rep,name=soldItemsData,proto3" json:"soldItemsData,omitempty"`
}

func (x *LeastSoldItemsResponse) Reset() {
	*x = LeastSoldItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeastSoldItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeastSoldItemsResponse) ProtoMessage() {}

func (x *LeastSoldItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeastSoldItemsResponse.ProtoReflect.Descriptor instead.
func (*LeastSoldItemsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{12}
}

func (x *LeastSoldItemsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeastSoldItemsResponse) GetSoldItemsData() []*SoldItemsData {
	if x != nil {
		return x.SoldItemsData
	}
	return nil
}

type RevenueItemsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key             string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	BillCount       float64 `protobuf:"fixed64,2,opt,name=billCount,proto3" json:"billCount,omitempty"`
	TotalSalesPrice float64 `protobuf:"fixed64,3,opt,name=totalSalesPrice,proto3" json:"totalSalesPrice,omitempty"`
}

func (x *RevenueItemsData) Reset() {
	*x = RevenueItemsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevenueItemsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevenueItemsData) ProtoMessage() {}

func (x *RevenueItemsData) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevenueItemsData.ProtoReflect.Descriptor instead.
func (*RevenueItemsData) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{13}
}

func (x *RevenueItemsData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RevenueItemsData) GetBillCount() float64 {
	if x != nil {
		return x.BillCount
	}
	return 0
}

func (x *RevenueItemsData) GetTotalSalesPrice() float64 {
	if x != nil {
		return x.TotalSalesPrice
	}
	return 0
}

type TopRevenueItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	Count       int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TopRevenueItemsRequest) Reset() {
	*x = TopRevenueItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopRevenueItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopRevenueItemsRequest) ProtoMessage() {}

func (x *TopRevenueItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopRevenueItemsRequest.ProtoReflect.Descriptor instead.
func (*TopRevenueItemsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{14}
}

func (x *TopRevenueItemsRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *TopRevenueItemsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *TopRevenueItemsRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *TopRevenueItemsRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *TopRevenueItemsRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TopRevenueItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success          bool                `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RevenueItemsData []*RevenueItemsData `protobuf:"bytes,2,rep,name=revenueItemsData,proto3" json:"revenueItemsData,omitempty"`
}

func (x *TopRevenueItemsResponse) Reset() {
	*x = TopRevenueItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopRevenueItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopRevenueItemsResponse) ProtoMessage() {}

func (x *TopRevenueItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopRevenueItemsResponse.ProtoReflect.Descriptor instead.
func (*TopRevenueItemsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{15}
}

func (x *TopRevenueItemsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TopRevenueItemsResponse) GetRevenueItemsData() []*RevenueItemsData {
	if x != nil {
		return x.RevenueItemsData
	}
	return nil
}

type LeastRevenueItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	Count       int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LeastRevenueItemsRequest) Reset() {
	*x = LeastRevenueItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeastRevenueItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeastRevenueItemsRequest) ProtoMessage() {}

func (x *LeastRevenueItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeastRevenueItemsRequest.ProtoReflect.Descriptor instead.
func (*LeastRevenueItemsRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{16}
}

func (x *LeastRevenueItemsRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *LeastRevenueItemsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *LeastRevenueItemsRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *LeastRevenueItemsRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *LeastRevenueItemsRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type LeastRevenueItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success          bool                `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RevenueItemsData []*RevenueItemsData `protobuf:"bytes,2,rep,name=revenueItemsData,proto3" json:"revenueItemsData,omitempty"`
}

func (x *LeastRevenueItemsResponse) Reset() {
	*x = LeastRevenueItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeastRevenueItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeastRevenueItemsResponse) ProtoMessage() {}

func (x *LeastRevenueItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeastRevenueItemsResponse.ProtoReflect.Descriptor instead.
func (*LeastRevenueItemsResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{17}
}

func (x *LeastRevenueItemsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeastRevenueItemsResponse) GetRevenueItemsData() []*RevenueItemsData {
	if x != nil {
		return x.RevenueItemsData
	}
	return nil
}

type StoreRevenueData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	BillCount    float64 `protobuf:"fixed64,2,opt,name=billCount,proto3" json:"billCount,omitempty"`
	TotalRevenue float64 `protobuf:"fixed64,3,opt,name=totalRevenue,proto3" json:"totalRevenue,omitempty"`
}

func (x *StoreRevenueData) Reset() {
	*x = StoreRevenueData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRevenueData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRevenueData) ProtoMessage() {}

func (x *StoreRevenueData) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRevenueData.ProtoReflect.Descriptor instead.
func (*StoreRevenueData) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{18}
}

func (x *StoreRevenueData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StoreRevenueData) GetBillCount() float64 {
	if x != nil {
		return x.BillCount
	}
	return 0
}

func (x *StoreRevenueData) GetTotalRevenue() float64 {
	if x != nil {
		return x.TotalRevenue
	}
	return 0
}

type StoreRevenueDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	Count       int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Ascending   bool   `protobuf:"varint,6,opt,name=ascending,proto3" json:"ascending,omitempty"`
}

func (x *StoreRevenueDataRequest) Reset() {
	*x = StoreRevenueDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRevenueDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRevenueDataRequest) ProtoMessage() {}

func (x *StoreRevenueDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRevenueDataRequest.ProtoReflect.Descriptor instead.
func (*StoreRevenueDataRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{19}
}

func (x *StoreRevenueDataRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *StoreRevenueDataRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *StoreRevenueDataRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *StoreRevenueDataRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *StoreRevenueDataRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StoreRevenueDataRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

type StoreRevenueDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success          bool                `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	StoreRevenueData []*StoreRevenueData `protobuf:"bytes,2,rep,name=storeRevenueData,proto3" json:"storeRevenueData,omitempty"`
}

func (x *StoreRevenueDataResponse) Reset() {
	*x = StoreRevenueDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRevenueDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRevenueDataResponse) ProtoMessage() {}

func (x *StoreRevenueDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRevenueDataResponse.ProtoReflect.Descriptor instead.
func (*StoreRevenueDataResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{20}
}

func (x *StoreRevenueDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreRevenueDataResponse) GetStoreRevenueData() []*StoreRevenueData {
	if x != nil {
		return x.StoreRevenueData
	}
	return nil
}

type StoreBillData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	BillCount float64 `protobuf:"fixed64,2,opt,name=billCount,proto3" json:"billCount,omitempty"`
}

func (x *StoreBillData) Reset() {
	*x = StoreBillData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreBillData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBillData) ProtoMessage() {}

func (x *StoreBillData) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBillData.ProtoReflect.Descriptor instead.
func (*StoreBillData) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{21}
}

func (x *StoreBillData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StoreBillData) GetBillCount() float64 {
	if x != nil {
		return x.BillCount
	}
	return 0
}

type StoreSalesDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	Count       int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Ascending   bool   `protobuf:"varint,6,opt,name=ascending,proto3" json:"ascending,omitempty"`
}

func (x *StoreSalesDataRequest) Reset() {
	*x = StoreSalesDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreSalesDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSalesDataRequest) ProtoMessage() {}

func (x *StoreSalesDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSalesDataRequest.ProtoReflect.Descriptor instead.
func (*StoreSalesDataRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{22}
}

func (x *StoreSalesDataRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *StoreSalesDataRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *StoreSalesDataRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *StoreSalesDataRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *StoreSalesDataRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StoreSalesDataRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

type StoreSalesDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	StoreBillData []*StoreBillData `protobuf:"bytes,2,rep,name=storeBillData,proto3" json:"storeBillData,omitempty"`
}

func (x *StoreSalesDataResponse) Reset() {
	*x = StoreSalesDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreSalesDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreSalesDataResponse) ProtoMessage() {}

func (x *StoreSalesDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreSalesDataResponse.ProtoReflect.Descriptor instead.
func (*StoreSalesDataResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{23}
}

func (x *StoreSalesDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreSalesDataResponse) GetStoreBillData() []*StoreBillData {
	if x != nil {
		return x.StoreBillData
	}
	return nil
}

type AverageSalesAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AverageSalesAmountRequest) Reset() {
	*x = AverageSalesAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AverageSalesAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AverageSalesAmountRequest) ProtoMessage() {}

func (x *AverageSalesAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AverageSalesAmountRequest.ProtoReflect.Descriptor instead.
func (*AverageSalesAmountRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{24}
}

func (x *AverageSalesAmountRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *AverageSalesAmountRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *AverageSalesAmountRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *AverageSalesAmountRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type AverageSalesAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Amount  float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *AverageSalesAmountResponse) Reset() {
	*x = AverageSalesAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AverageSalesAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AverageSalesAmountResponse) ProtoMessage() {}

func (x *AverageSalesAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AverageSalesAmountResponse.ProtoReflect.Descriptor instead.
func (*AverageSalesAmountResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{25}
}

func (x *AverageSalesAmountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AverageSalesAmountResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type AverageSoldQuantityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AverageSoldQuantityRequest) Reset() {
	*x = AverageSoldQuantityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AverageSoldQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AverageSoldQuantityRequest) ProtoMessage() {}

func (x *AverageSoldQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AverageSoldQuantityRequest.ProtoReflect.Descriptor instead.
func (*AverageSoldQuantityRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{26}
}

func (x *AverageSoldQuantityRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *AverageSoldQuantityRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *AverageSoldQuantityRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *AverageSoldQuantityRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type AverageSoldQuantityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Quantity float64 `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *AverageSoldQuantityResponse) Reset() {
	*x = AverageSoldQuantityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AverageSoldQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AverageSoldQuantityResponse) ProtoMessage() {}

func (x *AverageSoldQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AverageSoldQuantityResponse.ProtoReflect.Descriptor instead.
func (*AverageSoldQuantityResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{27}
}

func (x *AverageSoldQuantityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AverageSoldQuantityResponse) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type TotalSalesAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
	StoreId     string `protobuf:"bytes,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	From        int64  `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	To          int64  `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *TotalSalesAmountRequest) Reset() {
	*x = TotalSalesAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalSalesAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalSalesAmountRequest) ProtoMessage() {}

func (x *TotalSalesAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalSalesAmountRequest.ProtoReflect.Descriptor instead.
func (*TotalSalesAmountRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{28}
}

func (x *TotalSalesAmountRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *TotalSalesAmountRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *TotalSalesAmountRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *TotalSalesAmountRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type TotalSalesAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Amount  float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TotalSalesAmountResponse) Reset() {
	*x = TotalSalesAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalSalesAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalSalesAmountResponse) ProtoMessage() {}

func (x *TotalSalesAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalSalesAmountResponse.ProtoReflect.Descriptor instead.
func (*TotalSalesAmountResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{29}
}

func (x *TotalSalesAmountResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TotalSalesAmountResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type AddStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
}

func (x *AddStoreRequest) Reset() {
	*x = AddStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStoreRequest) ProtoMessage() {}

func (x *AddStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStoreRequest.ProtoReflect.Descriptor instead.
func (*AddStoreRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{30}
}

func (x *AddStoreRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

type AddStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddStoreResponse) Reset() {
	*x = AddStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStoreResponse) ProtoMessage() {}

func (x *AddStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStoreResponse.ProtoReflect.Descriptor instead.
func (*AddStoreResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{31}
}

func (x *AddStoreResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddStoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channelName,proto3" json:"channelName,omitempty"`
}

func (x *DeleteStoreRequest) Reset() {
	*x = DeleteStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoreRequest) ProtoMessage() {}

func (x *DeleteStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteStoreRequest) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteStoreRequest) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

type DeleteStoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteStoreResponse) Reset() {
	*x = DeleteStoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoreResponse) ProtoMessage() {}

func (x *DeleteStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoreResponse.ProtoReflect.Descriptor instead.
func (*DeleteStoreResponse) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteStoreResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteStoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_analytics_proto protoreflect.FileDescriptor

var file_analytics_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x22, 0x21, 0x0a, 0x0b,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x22,
	0x22, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x69, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x98,
	0x01, 0x0a, 0x1a, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x92, 0x01,
	0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62,
	0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32,
	0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a, 0x1f, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x20, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x69, 0x63, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x0d, 0x53, 0x6f, 0x6c,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x70, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0d, 0x73, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x72, 0x0a, 0x16, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x6f, 0x6c, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x73, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7c, 0x0a, 0x17, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x72, 0x65,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x52, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x19, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a,
	0x10, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x66, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x22, 0xad,
	0x01, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x7d,
	0x0a, 0x18, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x76,
	0x65, 0x6e, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a,
	0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xab,
	0x01, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x72, 0x0a, 0x16,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x7b, 0x0a, 0x19, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x4e, 0x0a,
	0x1a, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7c, 0x0a,
	0x1a, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x6c, 0x64, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x1b, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x6c, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x79, 0x0a, 0x17, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x18, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x49,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x8a, 0x0a, 0x0a, 0x09, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x16, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1a,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x69, 0x63, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x75, 0x0a, 0x18, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x69, 0x63, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x69, 0x63, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x53,
	0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x4c,
	0x65, 0x61, 0x73, 0x74, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x53,
	0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x73,
	0x74, 0x53, 0x6f, 0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x57, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x24, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x66, 0x0a, 0x13, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x6c, 0x64, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x6c, 0x64, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x6f, 0x6c, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x3b, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_analytics_proto_rawDescOnce sync.Once
	file_analytics_proto_rawDescData = file_analytics_proto_rawDesc
)

func file_analytics_proto_rawDescGZIP() []byte {
	file_analytics_proto_rawDescOnce.Do(func() {
		file_analytics_proto_rawDescData = protoimpl.X.CompressGZIP(file_analytics_proto_rawDescData)
	})
	return file_analytics_proto_rawDescData
}

var file_analytics_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_analytics_proto_goTypes = []interface{}{
	(*PingRequest)(nil),                      // 0: analytics.PingRequest
	(*PingResponse)(nil),                     // 1: analytics.PingResponse
	(*SalesData)(nil),                        // 2: analytics.SalesData
	(*PeriodicSalesAmountRequest)(nil),       // 3: analytics.PeriodicSalesAmountRequest
	(*PeriodicSalesAmountResponse)(nil),      // 4: analytics.PeriodicSalesAmountResponse
	(*StoreSalesData)(nil),                   // 5: analytics.StoreSalesData
	(*PeriodicStoreSalesAmountRequest)(nil),  // 6: analytics.PeriodicStoreSalesAmountRequest
	(*PeriodicStoreSalesAmountResponse)(nil), // 7: analytics.PeriodicStoreSalesAmountResponse
	(*SoldItemsData)(nil),                    // 8: analytics.SoldItemsData
	(*TopSoldItemsRequest)(nil),              // 9: analytics.TopSoldItemsRequest
	(*TopSoldItemsResponse)(nil),             // 10: analytics.TopSoldItemsResponse
	(*LeastSoldItemsRequest)(nil),            // 11: analytics.LeastSoldItemsRequest
	(*LeastSoldItemsResponse)(nil),           // 12: analytics.LeastSoldItemsResponse
	(*RevenueItemsData)(nil),                 // 13: analytics.RevenueItemsData
	(*TopRevenueItemsRequest)(nil),           // 14: analytics.TopRevenueItemsRequest
	(*TopRevenueItemsResponse)(nil),          // 15: analytics.TopRevenueItemsResponse
	(*LeastRevenueItemsRequest)(nil),         // 16: analytics.LeastRevenueItemsRequest
	(*LeastRevenueItemsResponse)(nil),        // 17: analytics.LeastRevenueItemsResponse
	(*StoreRevenueData)(nil),                 // 18: analytics.StoreRevenueData
	(*StoreRevenueDataRequest)(nil),          // 19: analytics.StoreRevenueDataRequest
	(*StoreRevenueDataResponse)(nil),         // 20: analytics.StoreRevenueDataResponse
	(*StoreBillData)(nil),                    // 21: analytics.StoreBillData
	(*StoreSalesDataRequest)(nil),            // 22: analytics.StoreSalesDataRequest
	(*StoreSalesDataResponse)(nil),           // 23: analytics.StoreSalesDataResponse
	(*AverageSalesAmountRequest)(nil),        // 24: analytics.AverageSalesAmountRequest
	(*AverageSalesAmountResponse)(nil),       // 25: analytics.AverageSalesAmountResponse
	(*AverageSoldQuantityRequest)(nil),       // 26: analytics.AverageSoldQuantityRequest
	(*AverageSoldQuantityResponse)(nil),      // 27: analytics.AverageSoldQuantityResponse
	(*TotalSalesAmountRequest)(nil),          // 28: analytics.TotalSalesAmountRequest
	(*TotalSalesAmountResponse)(nil),         // 29: analytics.TotalSalesAmountResponse
	(*AddStoreRequest)(nil),                  // 30: analytics.AddStoreRequest
	(*AddStoreResponse)(nil),                 // 31: analytics.AddStoreResponse
	(*DeleteStoreRequest)(nil),               // 32: analytics.DeleteStoreRequest
	(*DeleteStoreResponse)(nil),              // 33: analytics.DeleteStoreResponse
}
var file_analytics_proto_depIdxs = []int32{
	2,  // 0: analytics.PeriodicSalesAmountResponse.salesData:type_name -> analytics.SalesData
	2,  // 1: analytics.StoreSalesData.salesData:type_name -> analytics.SalesData
	5,  // 2: analytics.PeriodicStoreSalesAmountResponse.storeSalesData:type_name -> analytics.StoreSalesData
	8,  // 3: analytics.TopSoldItemsResponse.soldItemsData:type_name -> analytics.SoldItemsData
	8,  // 4: analytics.LeastSoldItemsResponse.soldItemsData:type_name -> analytics.SoldItemsData
	13, // 5: analytics.TopRevenueItemsResponse.revenueItemsData:type_name -> analytics.RevenueItemsData
	13, // 6: analytics.LeastRevenueItemsResponse.revenueItemsData:type_name -> analytics.RevenueItemsData
	18, // 7: analytics.StoreRevenueDataResponse.storeRevenueData:type_name -> analytics.StoreRevenueData
	21, // 8: analytics.StoreSalesDataResponse.storeBillData:type_name -> analytics.StoreBillData
	0,  // 9: analytics.Analytics.Ping:input_type -> analytics.PingRequest
	30, // 10: analytics.Analytics.AddStore:input_type -> analytics.AddStoreRequest
	32, // 11: analytics.Analytics.DeleteStore:input_type -> analytics.DeleteStoreRequest
	3,  // 12: analytics.Analytics.PeriodicSalesAmount:input_type -> analytics.PeriodicSalesAmountRequest
	6,  // 13: analytics.Analytics.PeriodicStoreSalesAmount:input_type -> analytics.PeriodicStoreSalesAmountRequest
	9,  // 14: analytics.Analytics.TopSoldItems:input_type -> analytics.TopSoldItemsRequest
	11, // 15: analytics.Analytics.LeastSoldItems:input_type -> analytics.LeastSoldItemsRequest
	14, // 16: analytics.Analytics.TopRevenueItems:input_type -> analytics.TopRevenueItemsRequest
	16, // 17: analytics.Analytics.LeastRevenueItems:input_type -> analytics.LeastRevenueItemsRequest
	19, // 18: analytics.Analytics.StoreRevenueData:input_type -> analytics.StoreRevenueDataRequest
	22, // 19: analytics.Analytics.StoreSalesData:input_type -> analytics.StoreSalesDataRequest
	24, // 20: analytics.Analytics.AverageSalesAmount:input_type -> analytics.AverageSalesAmountRequest
	26, // 21: analytics.Analytics.AverageSoldQuantity:input_type -> analytics.AverageSoldQuantityRequest
	28, // 22: analytics.Analytics.TotalSalesAmount:input_type -> analytics.TotalSalesAmountRequest
	1,  // 23: analytics.Analytics.Ping:output_type -> analytics.PingResponse
	31, // 24: analytics.Analytics.AddStore:output_type -> analytics.AddStoreResponse
	33, // 25: analytics.Analytics.DeleteStore:output_type -> analytics.DeleteStoreResponse
	4,  // 26: analytics.Analytics.PeriodicSalesAmount:output_type -> analytics.PeriodicSalesAmountResponse
	7,  // 27: analytics.Analytics.PeriodicStoreSalesAmount:output_type -> analytics.PeriodicStoreSalesAmountResponse
	10, // 28: analytics.Analytics.TopSoldItems:output_type -> analytics.TopSoldItemsResponse
	12, // 29: analytics.Analytics.LeastSoldItems:output_type -> analytics.LeastSoldItemsResponse
	15, // 30: analytics.Analytics.TopRevenueItems:output_type -> analytics.TopRevenueItemsResponse
	17, // 31: analytics.Analytics.LeastRevenueItems:output_type -> analytics.LeastRevenueItemsResponse
	20, // 32: analytics.Analytics.StoreRevenueData:output_type -> analytics.StoreRevenueDataResponse
	23, // 33: analytics.Analytics.StoreSalesData:output_type -> analytics.StoreSalesDataResponse
	25, // 34: analytics.Analytics.AverageSalesAmount:output_type -> analytics.AverageSalesAmountResponse
	27, // 35: analytics.Analytics.AverageSoldQuantity:output_type -> analytics.AverageSoldQuantityResponse
	29, // 36: analytics.Analytics.TotalSalesAmount:output_type -> analytics.TotalSalesAmountResponse
	23, // [23:37] is the sub-list for method output_type
	9,  // [9:23] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_analytics_proto_init() }
func file_analytics_proto_init() {
	if File_analytics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_analytics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicSalesAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicSalesAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreSalesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicStoreSalesAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeriodicStoreSalesAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoldItemsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopSoldItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopSoldItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeastSoldItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeastSoldItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevenueItemsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopRevenueItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopRevenueItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeastRevenueItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeastRevenueItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRevenueData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRevenueDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRevenueDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreBillData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreSalesDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreSalesDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AverageSalesAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AverageSalesAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AverageSoldQuantityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AverageSoldQuantityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalSalesAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalSalesAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analytics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analytics_proto_goTypes,
		DependencyIndexes: file_analytics_proto_depIdxs,
		MessageInfos:      file_analytics_proto_msgTypes,
	}.Build()
	File_analytics_proto = out.File
	file_analytics_proto_rawDesc = nil
	file_analytics_proto_goTypes = nil
	file_analytics_proto_depIdxs = nil
}
