/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.analytics.AverageSalesAmountRequest', null, global);
goog.exportSymbol('proto.analytics.AverageSalesAmountResponse', null, global);
goog.exportSymbol('proto.analytics.AverageSoldQuantityRequest', null, global);
goog.exportSymbol('proto.analytics.AverageSoldQuantityResponse', null, global);
goog.exportSymbol('proto.analytics.LeastRevenueItemsRequest', null, global);
goog.exportSymbol('proto.analytics.LeastRevenueItemsResponse', null, global);
goog.exportSymbol('proto.analytics.LeastSoldItemsRequest', null, global);
goog.exportSymbol('proto.analytics.LeastSoldItemsResponse', null, global);
goog.exportSymbol('proto.analytics.PeriodicSalesAmountRequest', null, global);
goog.exportSymbol('proto.analytics.PeriodicSalesAmountResponse', null, global);
goog.exportSymbol('proto.analytics.PeriodicStoreSalesAmountRequest', null, global);
goog.exportSymbol('proto.analytics.PeriodicStoreSalesAmountResponse', null, global);
goog.exportSymbol('proto.analytics.PingRequest', null, global);
goog.exportSymbol('proto.analytics.PingResponse', null, global);
goog.exportSymbol('proto.analytics.RevenueItemsData', null, global);
goog.exportSymbol('proto.analytics.SalesData', null, global);
goog.exportSymbol('proto.analytics.SoldItemsData', null, global);
goog.exportSymbol('proto.analytics.StoreBillData', null, global);
goog.exportSymbol('proto.analytics.StoreRevenueData', null, global);
goog.exportSymbol('proto.analytics.StoreRevenueDataRequest', null, global);
goog.exportSymbol('proto.analytics.StoreRevenueDataResponse', null, global);
goog.exportSymbol('proto.analytics.StoreSalesData', null, global);
goog.exportSymbol('proto.analytics.StoreSalesDataRequest', null, global);
goog.exportSymbol('proto.analytics.StoreSalesDataResponse', null, global);
goog.exportSymbol('proto.analytics.TopRevenueItemsRequest', null, global);
goog.exportSymbol('proto.analytics.TopRevenueItemsResponse', null, global);
goog.exportSymbol('proto.analytics.TopSoldItemsRequest', null, global);
goog.exportSymbol('proto.analytics.TopSoldItemsResponse', null, global);
goog.exportSymbol('proto.analytics.TotalSalesAmountRequest', null, global);
goog.exportSymbol('proto.analytics.TotalSalesAmountResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.PingRequest.displayName = 'proto.analytics.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.PingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.PingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.PingResponse.displayName = 'proto.analytics.PingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.SalesData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.SalesData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.SalesData.displayName = 'proto.analytics.SalesData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.PeriodicSalesAmountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.PeriodicSalesAmountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.PeriodicSalesAmountRequest.displayName = 'proto.analytics.PeriodicSalesAmountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.PeriodicSalesAmountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.PeriodicSalesAmountResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.PeriodicSalesAmountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.PeriodicSalesAmountResponse.displayName = 'proto.analytics.PeriodicSalesAmountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.StoreSalesData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.StoreSalesData.repeatedFields_, null);
};
goog.inherits(proto.analytics.StoreSalesData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.StoreSalesData.displayName = 'proto.analytics.StoreSalesData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.PeriodicStoreSalesAmountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.PeriodicStoreSalesAmountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.PeriodicStoreSalesAmountRequest.displayName = 'proto.analytics.PeriodicStoreSalesAmountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.PeriodicStoreSalesAmountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.PeriodicStoreSalesAmountResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.PeriodicStoreSalesAmountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.PeriodicStoreSalesAmountResponse.displayName = 'proto.analytics.PeriodicStoreSalesAmountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.SoldItemsData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.SoldItemsData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.SoldItemsData.displayName = 'proto.analytics.SoldItemsData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TopSoldItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.TopSoldItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TopSoldItemsRequest.displayName = 'proto.analytics.TopSoldItemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TopSoldItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.TopSoldItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.TopSoldItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TopSoldItemsResponse.displayName = 'proto.analytics.TopSoldItemsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.LeastSoldItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.LeastSoldItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.LeastSoldItemsRequest.displayName = 'proto.analytics.LeastSoldItemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.LeastSoldItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.LeastSoldItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.LeastSoldItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.LeastSoldItemsResponse.displayName = 'proto.analytics.LeastSoldItemsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.RevenueItemsData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.RevenueItemsData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.RevenueItemsData.displayName = 'proto.analytics.RevenueItemsData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TopRevenueItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.TopRevenueItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TopRevenueItemsRequest.displayName = 'proto.analytics.TopRevenueItemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TopRevenueItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.TopRevenueItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.TopRevenueItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TopRevenueItemsResponse.displayName = 'proto.analytics.TopRevenueItemsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.LeastRevenueItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.LeastRevenueItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.LeastRevenueItemsRequest.displayName = 'proto.analytics.LeastRevenueItemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.LeastRevenueItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.LeastRevenueItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.LeastRevenueItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.LeastRevenueItemsResponse.displayName = 'proto.analytics.LeastRevenueItemsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.StoreRevenueData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.StoreRevenueData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.StoreRevenueData.displayName = 'proto.analytics.StoreRevenueData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.StoreRevenueDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.StoreRevenueDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.StoreRevenueDataRequest.displayName = 'proto.analytics.StoreRevenueDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.StoreRevenueDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.StoreRevenueDataResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.StoreRevenueDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.StoreRevenueDataResponse.displayName = 'proto.analytics.StoreRevenueDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.StoreBillData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.StoreBillData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.StoreBillData.displayName = 'proto.analytics.StoreBillData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.StoreSalesDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.StoreSalesDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.StoreSalesDataRequest.displayName = 'proto.analytics.StoreSalesDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.StoreSalesDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.StoreSalesDataResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.StoreSalesDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.StoreSalesDataResponse.displayName = 'proto.analytics.StoreSalesDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.AverageSalesAmountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.AverageSalesAmountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.AverageSalesAmountRequest.displayName = 'proto.analytics.AverageSalesAmountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.AverageSalesAmountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.AverageSalesAmountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.AverageSalesAmountResponse.displayName = 'proto.analytics.AverageSalesAmountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.AverageSoldQuantityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.AverageSoldQuantityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.AverageSoldQuantityRequest.displayName = 'proto.analytics.AverageSoldQuantityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.AverageSoldQuantityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.AverageSoldQuantityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.AverageSoldQuantityResponse.displayName = 'proto.analytics.AverageSoldQuantityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TotalSalesAmountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.TotalSalesAmountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TotalSalesAmountRequest.displayName = 'proto.analytics.TotalSalesAmountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TotalSalesAmountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.TotalSalesAmountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TotalSalesAmountResponse.displayName = 'proto.analytics.TotalSalesAmountResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ping: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.PingRequest}
 */
proto.analytics.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.PingRequest;
  return proto.analytics.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.PingRequest}
 */
proto.analytics.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPing();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ping = 1;
 * @return {string}
 */
proto.analytics.PingRequest.prototype.getPing = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.PingRequest.prototype.setPing = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.PingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.PingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.PingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pong: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.PingResponse}
 */
proto.analytics.PingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.PingResponse;
  return proto.analytics.PingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.PingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.PingResponse}
 */
proto.analytics.PingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPong(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.PingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.PingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.PingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPong();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string pong = 2;
 * @return {string}
 */
proto.analytics.PingResponse.prototype.getPong = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.PingResponse.prototype.setPong = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.SalesData.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.SalesData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.SalesData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.SalesData.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = +jspb.Message.getFieldWithDefault(msg, 1, 0.0)) == null ? undefined : f,
    billcount: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f,
    totalamount: (f = +jspb.Message.getFieldWithDefault(msg, 3, 0.0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.SalesData}
 */
proto.analytics.SalesData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.SalesData;
  return proto.analytics.SalesData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.SalesData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.SalesData}
 */
proto.analytics.SalesData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBillcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalamount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.SalesData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.SalesData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.SalesData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.SalesData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getBillcount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double timestamp = 1;
 * @return {number}
 */
proto.analytics.SalesData.prototype.getTimestamp = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.analytics.SalesData.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double billCount = 2;
 * @return {number}
 */
proto.analytics.SalesData.prototype.getBillcount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.SalesData.prototype.setBillcount = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double totalAmount = 3;
 * @return {number}
 */
proto.analytics.SalesData.prototype.getTotalamount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.analytics.SalesData.prototype.setTotalamount = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.PeriodicSalesAmountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.PeriodicSalesAmountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.PeriodicSalesAmountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PeriodicSalesAmountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    interval: (f = jspb.Message.getFieldWithDefault(msg, 3, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 5, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.PeriodicSalesAmountRequest}
 */
proto.analytics.PeriodicSalesAmountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.PeriodicSalesAmountRequest;
  return proto.analytics.PeriodicSalesAmountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.PeriodicSalesAmountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.PeriodicSalesAmountRequest}
 */
proto.analytics.PeriodicSalesAmountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterval(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.PeriodicSalesAmountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.PeriodicSalesAmountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.PeriodicSalesAmountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PeriodicSalesAmountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInterval();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.PeriodicSalesAmountRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.PeriodicSalesAmountRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.PeriodicSalesAmountRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.PeriodicSalesAmountRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string interval = 3;
 * @return {string}
 */
proto.analytics.PeriodicSalesAmountRequest.prototype.getInterval = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.analytics.PeriodicSalesAmountRequest.prototype.setInterval = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 from = 4;
 * @return {number}
 */
proto.analytics.PeriodicSalesAmountRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.PeriodicSalesAmountRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 to = 5;
 * @return {number}
 */
proto.analytics.PeriodicSalesAmountRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.PeriodicSalesAmountRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.PeriodicSalesAmountResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.PeriodicSalesAmountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.PeriodicSalesAmountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.PeriodicSalesAmountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PeriodicSalesAmountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    total: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f,
    salesdataList: jspb.Message.toObjectList(msg.getSalesdataList(),
    proto.analytics.SalesData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.PeriodicSalesAmountResponse}
 */
proto.analytics.PeriodicSalesAmountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.PeriodicSalesAmountResponse;
  return proto.analytics.PeriodicSalesAmountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.PeriodicSalesAmountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.PeriodicSalesAmountResponse}
 */
proto.analytics.PeriodicSalesAmountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotal(value);
      break;
    case 3:
      var value = new proto.analytics.SalesData;
      reader.readMessage(value,proto.analytics.SalesData.deserializeBinaryFromReader);
      msg.addSalesdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.PeriodicSalesAmountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.PeriodicSalesAmountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.PeriodicSalesAmountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PeriodicSalesAmountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getSalesdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.analytics.SalesData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.PeriodicSalesAmountResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.PeriodicSalesAmountResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double total = 2;
 * @return {number}
 */
proto.analytics.PeriodicSalesAmountResponse.prototype.getTotal = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.PeriodicSalesAmountResponse.prototype.setTotal = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * repeated SalesData salesData = 3;
 * @return {!Array<!proto.analytics.SalesData>}
 */
proto.analytics.PeriodicSalesAmountResponse.prototype.getSalesdataList = function() {
  return /** @type{!Array<!proto.analytics.SalesData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.SalesData, 3));
};


/** @param {!Array<!proto.analytics.SalesData>} value */
proto.analytics.PeriodicSalesAmountResponse.prototype.setSalesdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.analytics.SalesData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.SalesData}
 */
proto.analytics.PeriodicSalesAmountResponse.prototype.addSalesdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.analytics.SalesData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.PeriodicSalesAmountResponse.prototype.clearSalesdataList = function() {
  this.setSalesdataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.StoreSalesData.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.StoreSalesData.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.StoreSalesData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.StoreSalesData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreSalesData.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    billcount: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f,
    total: (f = +jspb.Message.getFieldWithDefault(msg, 3, 0.0)) == null ? undefined : f,
    salesdataList: jspb.Message.toObjectList(msg.getSalesdataList(),
    proto.analytics.SalesData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.StoreSalesData}
 */
proto.analytics.StoreSalesData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.StoreSalesData;
  return proto.analytics.StoreSalesData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.StoreSalesData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.StoreSalesData}
 */
proto.analytics.StoreSalesData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBillcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotal(value);
      break;
    case 4:
      var value = new proto.analytics.SalesData;
      reader.readMessage(value,proto.analytics.SalesData.deserializeBinaryFromReader);
      msg.addSalesdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.StoreSalesData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.StoreSalesData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.StoreSalesData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreSalesData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBillcount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getSalesdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.analytics.SalesData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string storeId = 1;
 * @return {string}
 */
proto.analytics.StoreSalesData.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.StoreSalesData.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double billCount = 2;
 * @return {number}
 */
proto.analytics.StoreSalesData.prototype.getBillcount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.StoreSalesData.prototype.setBillcount = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double total = 3;
 * @return {number}
 */
proto.analytics.StoreSalesData.prototype.getTotal = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.analytics.StoreSalesData.prototype.setTotal = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * repeated SalesData salesData = 4;
 * @return {!Array<!proto.analytics.SalesData>}
 */
proto.analytics.StoreSalesData.prototype.getSalesdataList = function() {
  return /** @type{!Array<!proto.analytics.SalesData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.SalesData, 4));
};


/** @param {!Array<!proto.analytics.SalesData>} value */
proto.analytics.StoreSalesData.prototype.setSalesdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.analytics.SalesData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.SalesData}
 */
proto.analytics.StoreSalesData.prototype.addSalesdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.analytics.SalesData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.StoreSalesData.prototype.clearSalesdataList = function() {
  this.setSalesdataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.PeriodicStoreSalesAmountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.PeriodicStoreSalesAmountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PeriodicStoreSalesAmountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storecount: (f = jspb.Message.getFieldWithDefault(msg, 2, 0)) == null ? undefined : f,
    interval: (f = jspb.Message.getFieldWithDefault(msg, 3, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 5, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.PeriodicStoreSalesAmountRequest}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.PeriodicStoreSalesAmountRequest;
  return proto.analytics.PeriodicStoreSalesAmountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.PeriodicStoreSalesAmountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.PeriodicStoreSalesAmountRequest}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStorecount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInterval(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.PeriodicStoreSalesAmountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.PeriodicStoreSalesAmountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PeriodicStoreSalesAmountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStorecount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getInterval();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 storeCount = 2;
 * @return {number}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.getStorecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.setStorecount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string interval = 3;
 * @return {string}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.getInterval = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.setInterval = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 from = 4;
 * @return {number}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 to = 5;
 * @return {number}
 */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.PeriodicStoreSalesAmountRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.PeriodicStoreSalesAmountResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.PeriodicStoreSalesAmountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.PeriodicStoreSalesAmountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.PeriodicStoreSalesAmountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PeriodicStoreSalesAmountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    storesalesdataList: jspb.Message.toObjectList(msg.getStoresalesdataList(),
    proto.analytics.StoreSalesData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.PeriodicStoreSalesAmountResponse}
 */
proto.analytics.PeriodicStoreSalesAmountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.PeriodicStoreSalesAmountResponse;
  return proto.analytics.PeriodicStoreSalesAmountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.PeriodicStoreSalesAmountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.PeriodicStoreSalesAmountResponse}
 */
proto.analytics.PeriodicStoreSalesAmountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.analytics.StoreSalesData;
      reader.readMessage(value,proto.analytics.StoreSalesData.deserializeBinaryFromReader);
      msg.addStoresalesdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.PeriodicStoreSalesAmountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.PeriodicStoreSalesAmountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.PeriodicStoreSalesAmountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.PeriodicStoreSalesAmountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStoresalesdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.StoreSalesData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.PeriodicStoreSalesAmountResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.PeriodicStoreSalesAmountResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated StoreSalesData storeSalesData = 2;
 * @return {!Array<!proto.analytics.StoreSalesData>}
 */
proto.analytics.PeriodicStoreSalesAmountResponse.prototype.getStoresalesdataList = function() {
  return /** @type{!Array<!proto.analytics.StoreSalesData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.StoreSalesData, 2));
};


/** @param {!Array<!proto.analytics.StoreSalesData>} value */
proto.analytics.PeriodicStoreSalesAmountResponse.prototype.setStoresalesdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.StoreSalesData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.StoreSalesData}
 */
proto.analytics.PeriodicStoreSalesAmountResponse.prototype.addStoresalesdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.StoreSalesData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.PeriodicStoreSalesAmountResponse.prototype.clearStoresalesdataList = function() {
  this.setStoresalesdataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.SoldItemsData.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.SoldItemsData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.SoldItemsData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.SoldItemsData.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    count: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.SoldItemsData}
 */
proto.analytics.SoldItemsData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.SoldItemsData;
  return proto.analytics.SoldItemsData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.SoldItemsData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.SoldItemsData}
 */
proto.analytics.SoldItemsData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.SoldItemsData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.SoldItemsData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.SoldItemsData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.SoldItemsData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.analytics.SoldItemsData.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.SoldItemsData.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double count = 2;
 * @return {number}
 */
proto.analytics.SoldItemsData.prototype.getCount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.SoldItemsData.prototype.setCount = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TopSoldItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TopSoldItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TopSoldItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TopSoldItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f,
    count: (f = jspb.Message.getFieldWithDefault(msg, 5, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TopSoldItemsRequest}
 */
proto.analytics.TopSoldItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TopSoldItemsRequest;
  return proto.analytics.TopSoldItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TopSoldItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TopSoldItemsRequest}
 */
proto.analytics.TopSoldItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TopSoldItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TopSoldItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TopSoldItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TopSoldItemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.TopSoldItemsRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.TopSoldItemsRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.TopSoldItemsRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.TopSoldItemsRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.TopSoldItemsRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.TopSoldItemsRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.TopSoldItemsRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.TopSoldItemsRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.analytics.TopSoldItemsRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.TopSoldItemsRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.TopSoldItemsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TopSoldItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TopSoldItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TopSoldItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TopSoldItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    solditemsdataList: jspb.Message.toObjectList(msg.getSolditemsdataList(),
    proto.analytics.SoldItemsData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TopSoldItemsResponse}
 */
proto.analytics.TopSoldItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TopSoldItemsResponse;
  return proto.analytics.TopSoldItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TopSoldItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TopSoldItemsResponse}
 */
proto.analytics.TopSoldItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.analytics.SoldItemsData;
      reader.readMessage(value,proto.analytics.SoldItemsData.deserializeBinaryFromReader);
      msg.addSolditemsdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TopSoldItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TopSoldItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TopSoldItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TopSoldItemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSolditemsdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.SoldItemsData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.TopSoldItemsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.TopSoldItemsResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated SoldItemsData soldItemsData = 2;
 * @return {!Array<!proto.analytics.SoldItemsData>}
 */
proto.analytics.TopSoldItemsResponse.prototype.getSolditemsdataList = function() {
  return /** @type{!Array<!proto.analytics.SoldItemsData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.SoldItemsData, 2));
};


/** @param {!Array<!proto.analytics.SoldItemsData>} value */
proto.analytics.TopSoldItemsResponse.prototype.setSolditemsdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.SoldItemsData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.SoldItemsData}
 */
proto.analytics.TopSoldItemsResponse.prototype.addSolditemsdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.SoldItemsData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.TopSoldItemsResponse.prototype.clearSolditemsdataList = function() {
  this.setSolditemsdataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.LeastSoldItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.LeastSoldItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.LeastSoldItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LeastSoldItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f,
    count: (f = jspb.Message.getFieldWithDefault(msg, 5, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.LeastSoldItemsRequest}
 */
proto.analytics.LeastSoldItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.LeastSoldItemsRequest;
  return proto.analytics.LeastSoldItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.LeastSoldItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.LeastSoldItemsRequest}
 */
proto.analytics.LeastSoldItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.LeastSoldItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.LeastSoldItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.LeastSoldItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LeastSoldItemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.LeastSoldItemsRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.LeastSoldItemsRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.LeastSoldItemsRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.LeastSoldItemsRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.LeastSoldItemsRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.LeastSoldItemsRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.LeastSoldItemsRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.LeastSoldItemsRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.analytics.LeastSoldItemsRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.LeastSoldItemsRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.LeastSoldItemsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.LeastSoldItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.LeastSoldItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.LeastSoldItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LeastSoldItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    solditemsdataList: jspb.Message.toObjectList(msg.getSolditemsdataList(),
    proto.analytics.SoldItemsData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.LeastSoldItemsResponse}
 */
proto.analytics.LeastSoldItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.LeastSoldItemsResponse;
  return proto.analytics.LeastSoldItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.LeastSoldItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.LeastSoldItemsResponse}
 */
proto.analytics.LeastSoldItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.analytics.SoldItemsData;
      reader.readMessage(value,proto.analytics.SoldItemsData.deserializeBinaryFromReader);
      msg.addSolditemsdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.LeastSoldItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.LeastSoldItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.LeastSoldItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LeastSoldItemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSolditemsdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.SoldItemsData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.LeastSoldItemsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.LeastSoldItemsResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated SoldItemsData soldItemsData = 2;
 * @return {!Array<!proto.analytics.SoldItemsData>}
 */
proto.analytics.LeastSoldItemsResponse.prototype.getSolditemsdataList = function() {
  return /** @type{!Array<!proto.analytics.SoldItemsData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.SoldItemsData, 2));
};


/** @param {!Array<!proto.analytics.SoldItemsData>} value */
proto.analytics.LeastSoldItemsResponse.prototype.setSolditemsdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.SoldItemsData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.SoldItemsData}
 */
proto.analytics.LeastSoldItemsResponse.prototype.addSolditemsdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.SoldItemsData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.LeastSoldItemsResponse.prototype.clearSolditemsdataList = function() {
  this.setSolditemsdataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.RevenueItemsData.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.RevenueItemsData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.RevenueItemsData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.RevenueItemsData.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    billcount: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f,
    totalsalesprice: (f = +jspb.Message.getFieldWithDefault(msg, 3, 0.0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.RevenueItemsData}
 */
proto.analytics.RevenueItemsData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.RevenueItemsData;
  return proto.analytics.RevenueItemsData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.RevenueItemsData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.RevenueItemsData}
 */
proto.analytics.RevenueItemsData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBillcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalsalesprice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.RevenueItemsData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.RevenueItemsData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.RevenueItemsData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.RevenueItemsData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBillcount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTotalsalesprice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.analytics.RevenueItemsData.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.RevenueItemsData.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double billCount = 2;
 * @return {number}
 */
proto.analytics.RevenueItemsData.prototype.getBillcount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.RevenueItemsData.prototype.setBillcount = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double totalSalesPrice = 3;
 * @return {number}
 */
proto.analytics.RevenueItemsData.prototype.getTotalsalesprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.analytics.RevenueItemsData.prototype.setTotalsalesprice = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TopRevenueItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TopRevenueItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TopRevenueItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TopRevenueItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f,
    count: (f = jspb.Message.getFieldWithDefault(msg, 5, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TopRevenueItemsRequest}
 */
proto.analytics.TopRevenueItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TopRevenueItemsRequest;
  return proto.analytics.TopRevenueItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TopRevenueItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TopRevenueItemsRequest}
 */
proto.analytics.TopRevenueItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TopRevenueItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TopRevenueItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TopRevenueItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TopRevenueItemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.TopRevenueItemsRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.TopRevenueItemsRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.TopRevenueItemsRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.TopRevenueItemsRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.TopRevenueItemsRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.TopRevenueItemsRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.TopRevenueItemsRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.TopRevenueItemsRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.analytics.TopRevenueItemsRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.TopRevenueItemsRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.TopRevenueItemsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TopRevenueItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TopRevenueItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TopRevenueItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TopRevenueItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    revenueitemsdataList: jspb.Message.toObjectList(msg.getRevenueitemsdataList(),
    proto.analytics.RevenueItemsData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TopRevenueItemsResponse}
 */
proto.analytics.TopRevenueItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TopRevenueItemsResponse;
  return proto.analytics.TopRevenueItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TopRevenueItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TopRevenueItemsResponse}
 */
proto.analytics.TopRevenueItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.analytics.RevenueItemsData;
      reader.readMessage(value,proto.analytics.RevenueItemsData.deserializeBinaryFromReader);
      msg.addRevenueitemsdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TopRevenueItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TopRevenueItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TopRevenueItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TopRevenueItemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRevenueitemsdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.RevenueItemsData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.TopRevenueItemsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.TopRevenueItemsResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated RevenueItemsData revenueItemsData = 2;
 * @return {!Array<!proto.analytics.RevenueItemsData>}
 */
proto.analytics.TopRevenueItemsResponse.prototype.getRevenueitemsdataList = function() {
  return /** @type{!Array<!proto.analytics.RevenueItemsData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.RevenueItemsData, 2));
};


/** @param {!Array<!proto.analytics.RevenueItemsData>} value */
proto.analytics.TopRevenueItemsResponse.prototype.setRevenueitemsdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.RevenueItemsData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.RevenueItemsData}
 */
proto.analytics.TopRevenueItemsResponse.prototype.addRevenueitemsdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.RevenueItemsData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.TopRevenueItemsResponse.prototype.clearRevenueitemsdataList = function() {
  this.setRevenueitemsdataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.LeastRevenueItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.LeastRevenueItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.LeastRevenueItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LeastRevenueItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f,
    count: (f = jspb.Message.getFieldWithDefault(msg, 5, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.LeastRevenueItemsRequest}
 */
proto.analytics.LeastRevenueItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.LeastRevenueItemsRequest;
  return proto.analytics.LeastRevenueItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.LeastRevenueItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.LeastRevenueItemsRequest}
 */
proto.analytics.LeastRevenueItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.LeastRevenueItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.LeastRevenueItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.LeastRevenueItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LeastRevenueItemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.LeastRevenueItemsRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.LeastRevenueItemsRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.LeastRevenueItemsRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.LeastRevenueItemsRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.LeastRevenueItemsRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.LeastRevenueItemsRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.LeastRevenueItemsRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.LeastRevenueItemsRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.analytics.LeastRevenueItemsRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.LeastRevenueItemsRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.LeastRevenueItemsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.LeastRevenueItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.LeastRevenueItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.LeastRevenueItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LeastRevenueItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    revenueitemsdataList: jspb.Message.toObjectList(msg.getRevenueitemsdataList(),
    proto.analytics.RevenueItemsData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.LeastRevenueItemsResponse}
 */
proto.analytics.LeastRevenueItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.LeastRevenueItemsResponse;
  return proto.analytics.LeastRevenueItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.LeastRevenueItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.LeastRevenueItemsResponse}
 */
proto.analytics.LeastRevenueItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.analytics.RevenueItemsData;
      reader.readMessage(value,proto.analytics.RevenueItemsData.deserializeBinaryFromReader);
      msg.addRevenueitemsdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.LeastRevenueItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.LeastRevenueItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.LeastRevenueItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LeastRevenueItemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRevenueitemsdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.RevenueItemsData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.LeastRevenueItemsResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.LeastRevenueItemsResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated RevenueItemsData revenueItemsData = 2;
 * @return {!Array<!proto.analytics.RevenueItemsData>}
 */
proto.analytics.LeastRevenueItemsResponse.prototype.getRevenueitemsdataList = function() {
  return /** @type{!Array<!proto.analytics.RevenueItemsData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.RevenueItemsData, 2));
};


/** @param {!Array<!proto.analytics.RevenueItemsData>} value */
proto.analytics.LeastRevenueItemsResponse.prototype.setRevenueitemsdataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.RevenueItemsData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.RevenueItemsData}
 */
proto.analytics.LeastRevenueItemsResponse.prototype.addRevenueitemsdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.RevenueItemsData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.LeastRevenueItemsResponse.prototype.clearRevenueitemsdataList = function() {
  this.setRevenueitemsdataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.StoreRevenueData.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.StoreRevenueData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.StoreRevenueData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreRevenueData.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    billcount: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f,
    totalrevenue: (f = +jspb.Message.getFieldWithDefault(msg, 3, 0.0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.StoreRevenueData}
 */
proto.analytics.StoreRevenueData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.StoreRevenueData;
  return proto.analytics.StoreRevenueData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.StoreRevenueData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.StoreRevenueData}
 */
proto.analytics.StoreRevenueData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBillcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalrevenue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.StoreRevenueData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.StoreRevenueData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.StoreRevenueData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreRevenueData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBillcount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTotalrevenue();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.analytics.StoreRevenueData.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.StoreRevenueData.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double billCount = 2;
 * @return {number}
 */
proto.analytics.StoreRevenueData.prototype.getBillcount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.StoreRevenueData.prototype.setBillcount = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double totalRevenue = 3;
 * @return {number}
 */
proto.analytics.StoreRevenueData.prototype.getTotalrevenue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.analytics.StoreRevenueData.prototype.setTotalrevenue = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.StoreRevenueDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.StoreRevenueDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.StoreRevenueDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreRevenueDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f,
    count: (f = jspb.Message.getFieldWithDefault(msg, 5, 0)) == null ? undefined : f,
    ascending: (f = jspb.Message.getFieldWithDefault(msg, 6, false)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.StoreRevenueDataRequest}
 */
proto.analytics.StoreRevenueDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.StoreRevenueDataRequest;
  return proto.analytics.StoreRevenueDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.StoreRevenueDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.StoreRevenueDataRequest}
 */
proto.analytics.StoreRevenueDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAscending(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.StoreRevenueDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.StoreRevenueDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.StoreRevenueDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreRevenueDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAscending();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.StoreRevenueDataRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.StoreRevenueDataRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.StoreRevenueDataRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.StoreRevenueDataRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.StoreRevenueDataRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.StoreRevenueDataRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.StoreRevenueDataRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.StoreRevenueDataRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.analytics.StoreRevenueDataRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.StoreRevenueDataRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool ascending = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.StoreRevenueDataRequest.prototype.getAscending = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.analytics.StoreRevenueDataRequest.prototype.setAscending = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.StoreRevenueDataResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.StoreRevenueDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.StoreRevenueDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.StoreRevenueDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreRevenueDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    storerevenuedataList: jspb.Message.toObjectList(msg.getStorerevenuedataList(),
    proto.analytics.StoreRevenueData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.StoreRevenueDataResponse}
 */
proto.analytics.StoreRevenueDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.StoreRevenueDataResponse;
  return proto.analytics.StoreRevenueDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.StoreRevenueDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.StoreRevenueDataResponse}
 */
proto.analytics.StoreRevenueDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.analytics.StoreRevenueData;
      reader.readMessage(value,proto.analytics.StoreRevenueData.deserializeBinaryFromReader);
      msg.addStorerevenuedata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.StoreRevenueDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.StoreRevenueDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.StoreRevenueDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreRevenueDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStorerevenuedataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.StoreRevenueData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.StoreRevenueDataResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.StoreRevenueDataResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated StoreRevenueData storeRevenueData = 2;
 * @return {!Array<!proto.analytics.StoreRevenueData>}
 */
proto.analytics.StoreRevenueDataResponse.prototype.getStorerevenuedataList = function() {
  return /** @type{!Array<!proto.analytics.StoreRevenueData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.StoreRevenueData, 2));
};


/** @param {!Array<!proto.analytics.StoreRevenueData>} value */
proto.analytics.StoreRevenueDataResponse.prototype.setStorerevenuedataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.StoreRevenueData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.StoreRevenueData}
 */
proto.analytics.StoreRevenueDataResponse.prototype.addStorerevenuedata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.StoreRevenueData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.StoreRevenueDataResponse.prototype.clearStorerevenuedataList = function() {
  this.setStorerevenuedataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.StoreBillData.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.StoreBillData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.StoreBillData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreBillData.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    billcount: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.StoreBillData}
 */
proto.analytics.StoreBillData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.StoreBillData;
  return proto.analytics.StoreBillData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.StoreBillData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.StoreBillData}
 */
proto.analytics.StoreBillData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBillcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.StoreBillData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.StoreBillData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.StoreBillData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreBillData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBillcount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.analytics.StoreBillData.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.StoreBillData.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double billCount = 2;
 * @return {number}
 */
proto.analytics.StoreBillData.prototype.getBillcount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.StoreBillData.prototype.setBillcount = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.StoreSalesDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.StoreSalesDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.StoreSalesDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreSalesDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f,
    count: (f = jspb.Message.getFieldWithDefault(msg, 5, 0)) == null ? undefined : f,
    ascending: (f = jspb.Message.getFieldWithDefault(msg, 6, false)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.StoreSalesDataRequest}
 */
proto.analytics.StoreSalesDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.StoreSalesDataRequest;
  return proto.analytics.StoreSalesDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.StoreSalesDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.StoreSalesDataRequest}
 */
proto.analytics.StoreSalesDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAscending(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.StoreSalesDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.StoreSalesDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.StoreSalesDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreSalesDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAscending();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.StoreSalesDataRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.StoreSalesDataRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.StoreSalesDataRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.StoreSalesDataRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.StoreSalesDataRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.StoreSalesDataRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.StoreSalesDataRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.StoreSalesDataRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.analytics.StoreSalesDataRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.analytics.StoreSalesDataRequest.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool ascending = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.StoreSalesDataRequest.prototype.getAscending = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.analytics.StoreSalesDataRequest.prototype.setAscending = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.StoreSalesDataResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.StoreSalesDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.StoreSalesDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.StoreSalesDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreSalesDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    storebilldataList: jspb.Message.toObjectList(msg.getStorebilldataList(),
    proto.analytics.StoreBillData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.StoreSalesDataResponse}
 */
proto.analytics.StoreSalesDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.StoreSalesDataResponse;
  return proto.analytics.StoreSalesDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.StoreSalesDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.StoreSalesDataResponse}
 */
proto.analytics.StoreSalesDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = new proto.analytics.StoreBillData;
      reader.readMessage(value,proto.analytics.StoreBillData.deserializeBinaryFromReader);
      msg.addStorebilldata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.StoreSalesDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.StoreSalesDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.StoreSalesDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.StoreSalesDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStorebilldataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.StoreBillData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.StoreSalesDataResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.StoreSalesDataResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated StoreBillData storeBillData = 2;
 * @return {!Array<!proto.analytics.StoreBillData>}
 */
proto.analytics.StoreSalesDataResponse.prototype.getStorebilldataList = function() {
  return /** @type{!Array<!proto.analytics.StoreBillData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.StoreBillData, 2));
};


/** @param {!Array<!proto.analytics.StoreBillData>} value */
proto.analytics.StoreSalesDataResponse.prototype.setStorebilldataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.StoreBillData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.StoreBillData}
 */
proto.analytics.StoreSalesDataResponse.prototype.addStorebilldata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.StoreBillData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.analytics.StoreSalesDataResponse.prototype.clearStorebilldataList = function() {
  this.setStorebilldataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.AverageSalesAmountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.AverageSalesAmountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.AverageSalesAmountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AverageSalesAmountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.AverageSalesAmountRequest}
 */
proto.analytics.AverageSalesAmountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.AverageSalesAmountRequest;
  return proto.analytics.AverageSalesAmountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.AverageSalesAmountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.AverageSalesAmountRequest}
 */
proto.analytics.AverageSalesAmountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.AverageSalesAmountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.AverageSalesAmountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.AverageSalesAmountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AverageSalesAmountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.AverageSalesAmountRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.AverageSalesAmountRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.AverageSalesAmountRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.AverageSalesAmountRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.AverageSalesAmountRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.AverageSalesAmountRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.AverageSalesAmountRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.AverageSalesAmountRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.AverageSalesAmountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.AverageSalesAmountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.AverageSalesAmountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AverageSalesAmountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    amount: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.AverageSalesAmountResponse}
 */
proto.analytics.AverageSalesAmountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.AverageSalesAmountResponse;
  return proto.analytics.AverageSalesAmountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.AverageSalesAmountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.AverageSalesAmountResponse}
 */
proto.analytics.AverageSalesAmountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.AverageSalesAmountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.AverageSalesAmountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.AverageSalesAmountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AverageSalesAmountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.AverageSalesAmountResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.AverageSalesAmountResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.analytics.AverageSalesAmountResponse.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.AverageSalesAmountResponse.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.AverageSoldQuantityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.AverageSoldQuantityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.AverageSoldQuantityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AverageSoldQuantityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.AverageSoldQuantityRequest}
 */
proto.analytics.AverageSoldQuantityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.AverageSoldQuantityRequest;
  return proto.analytics.AverageSoldQuantityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.AverageSoldQuantityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.AverageSoldQuantityRequest}
 */
proto.analytics.AverageSoldQuantityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.AverageSoldQuantityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.AverageSoldQuantityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.AverageSoldQuantityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AverageSoldQuantityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.AverageSoldQuantityRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.AverageSoldQuantityRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.AverageSoldQuantityRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.AverageSoldQuantityRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.AverageSoldQuantityRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.AverageSoldQuantityRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.AverageSoldQuantityRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.AverageSoldQuantityRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.AverageSoldQuantityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.AverageSoldQuantityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.AverageSoldQuantityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AverageSoldQuantityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    quantity: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.AverageSoldQuantityResponse}
 */
proto.analytics.AverageSoldQuantityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.AverageSoldQuantityResponse;
  return proto.analytics.AverageSoldQuantityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.AverageSoldQuantityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.AverageSoldQuantityResponse}
 */
proto.analytics.AverageSoldQuantityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.AverageSoldQuantityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.AverageSoldQuantityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.AverageSoldQuantityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AverageSoldQuantityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.AverageSoldQuantityResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.AverageSoldQuantityResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double quantity = 2;
 * @return {number}
 */
proto.analytics.AverageSoldQuantityResponse.prototype.getQuantity = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.AverageSoldQuantityResponse.prototype.setQuantity = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TotalSalesAmountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TotalSalesAmountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TotalSalesAmountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TotalSalesAmountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelname: (f = jspb.Message.getFieldWithDefault(msg, 1, "")) == null ? undefined : f,
    storeid: (f = jspb.Message.getFieldWithDefault(msg, 2, "")) == null ? undefined : f,
    from: (f = jspb.Message.getFieldWithDefault(msg, 3, 0)) == null ? undefined : f,
    to: (f = jspb.Message.getFieldWithDefault(msg, 4, 0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TotalSalesAmountRequest}
 */
proto.analytics.TotalSalesAmountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TotalSalesAmountRequest;
  return proto.analytics.TotalSalesAmountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TotalSalesAmountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TotalSalesAmountRequest}
 */
proto.analytics.TotalSalesAmountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TotalSalesAmountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TotalSalesAmountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TotalSalesAmountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TotalSalesAmountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string channelName = 1;
 * @return {string}
 */
proto.analytics.TotalSalesAmountRequest.prototype.getChannelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.analytics.TotalSalesAmountRequest.prototype.setChannelname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string storeId = 2;
 * @return {string}
 */
proto.analytics.TotalSalesAmountRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.analytics.TotalSalesAmountRequest.prototype.setStoreid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.analytics.TotalSalesAmountRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.analytics.TotalSalesAmountRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.analytics.TotalSalesAmountRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.analytics.TotalSalesAmountRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TotalSalesAmountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TotalSalesAmountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TotalSalesAmountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TotalSalesAmountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = jspb.Message.getFieldWithDefault(msg, 1, false)) == null ? undefined : f,
    amount: (f = +jspb.Message.getFieldWithDefault(msg, 2, 0.0)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TotalSalesAmountResponse}
 */
proto.analytics.TotalSalesAmountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TotalSalesAmountResponse;
  return proto.analytics.TotalSalesAmountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TotalSalesAmountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TotalSalesAmountResponse}
 */
proto.analytics.TotalSalesAmountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TotalSalesAmountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TotalSalesAmountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TotalSalesAmountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TotalSalesAmountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.analytics.TotalSalesAmountResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.analytics.TotalSalesAmountResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.analytics.TotalSalesAmountResponse.prototype.getAmount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.analytics.TotalSalesAmountResponse.prototype.setAmount = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


goog.object.extend(exports, proto.analytics);
